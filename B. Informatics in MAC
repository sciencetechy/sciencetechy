In the Master's Assistance Center, Nyam-Nyam was given a homework assignment in informatics.
There is an array a of length n, and you want to divide it into k > 1 subsegments† in such a way that the MEX‡ on each subsegment is equal to the same integer.
Help Nyam-Nyam find any suitable division, or determine that it does not exist.
† A division of an array into k subsegments is defined as k pairs of integers (l1, r1), (l2, r2), …, (lk, rk) such that li ≤ ri and for each 1 ≤ j ≤ k−1, lj+1 = rj + 1, and also l1 = 1 and rk = n. These pairs represent the subsegments themselves.
‡ MEX of an array is the smallest non-negative integer that does not belong to the array.

For example:
MEX of the array [2, 2, 1] is 0, because 0 does not belong to the array.
MEX of the array [3, 1, 0, 1] is 2, because 0 and 1 belong to the array, but 2 does not.
MEX of the array [0, 3, 1, 2] is 4, because 0, 1, 2, and 3 belong to the array, but 4 does not.

CODE:
t = int(input(""))

for _ in range(t):
    n = int(input())
    a = list(map(int, input().split()))
    cur_mex = 0
    cur_have = [0] * (n + 1)
    for el in a:
        cur_have[el] += 1
    while cur_have[cur_mex]:
        cur_mex += 1

    another_mex = 0
    another_have = [0] * (n + 1)
    r=True
    for i in range(n):
        cur_have[a[i]] -= 1
        if cur_have[a[i]] == 0 and cur_mex > a[i]:
            cur_mex = a[i]

        another_have[a[i]] += 1
        while another_have[another_mex]:
            another_mex += 1

        if cur_mex == another_mex:
            print(2)
            print("1 " + str(i + 1))
            print(str(i + 2) + " " + str(n))
            r=False
            break

    if r:
        print(-1)
